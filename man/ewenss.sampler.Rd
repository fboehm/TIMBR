% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TIMBR_source.R, R/TIMBR_source_bk.R,
%   R/TIMBR_source_bk2.R, R/TIMBR_source_bk3.R
\name{ewenss.sampler}
\alias{ewenss.sampler}
\title{Ewens's sampling formula with optional gamma prior on the concentration parameter}
\usage{
ewenss.sampler(samples, trees, prior.alpha, verbose = T)

ewenss.sampler(samples, trees, prior.alpha, verbose = T)

ewenss.sampler(samples, trees, prior.alpha, verbose = T)

ewenss.sampler(samples, trees, prior.alpha, verbose = T)
}
\arguments{
\item{samples}{number of samples}

\item{trees}{either a user-specified tree(s) of class "phylo" ("multiPhylo"), detailed in the 'ape' package, or an integer with the number of leaves to be partitioned}

\item{prior.alpha}{prior type (fixed/gamma) for the concentration parameter, see examples for format}

\item{verbose}{optionally report function progress}

\item{samples}{number of samples}

\item{trees}{either a user-specified tree(s) of class "phylo" ("multiPhylo"), detailed in the 'ape' package, or an integer with the number of leaves to be partitioned}

\item{prior.alpha}{prior type (fixed/gamma) for the concentration parameter, see examples for format}

\item{verbose}{optionally report function progress}

\item{samples}{number of samples}

\item{trees}{either a user-specified tree(s) of class "phylo" ("multiPhylo"), detailed in the 'ape' package, or an integer with the number of leaves to be partitioned}

\item{prior.alpha}{prior type (fixed/gamma) for the concentration parameter, see examples for format}

\item{verbose}{optionally report function progress}

\item{samples}{number of samples}

\item{trees}{either a user-specified tree(s) of class "phylo" ("multiPhylo"), detailed in the 'ape' package, or an integer with the number of leaves to be partitioned}

\item{prior.alpha}{prior type (fixed/gamma) for the concentration parameter, see examples for format}

\item{verbose}{optionally report function progress}
}
\value{
list of allelic series IDs and probabilities, formatted as prior.M object for TIMBR function

list of allelic series IDs and probabilities, formatted as prior.M object for TIMBR function

list of allelic series IDs and probabilities, formatted as prior.M object for TIMBR function

list of allelic series IDs and probabilities, formatted as prior.M object for TIMBR function
}
\description{
Sample allelic series (paritions) from Ewen's sampling formula, optionally informed by user-specified tree(s). Trees must be in coalescent units for appropriate inference.

Sample allelic series (paritions) from Ewen's sampling formula, optionally informed by user-specified tree(s). Trees must be in coalescent units for appropriate inference.

Sample allelic series (paritions) from Ewen's sampling formula, optionally informed by user-specified tree(s). Trees must be in coalescent units for appropriate inference.

Sample allelic series (paritions) from Ewen's sampling formula, optionally informed by user-specified tree(s). Trees must be in coalescent units for appropriate inference.
}
\examples{
#specifying hyperparameters for gamma prior using calc.concentration.prior
hyperparam <- calc.concentration.prior(8, 0.05, 0.01)
prior.alpha <- list(type="gamma", shape=hyperparam[1], rate=hyperparam[2])

#running the sampler without user-specified trees; compare with target prior probabilities
prior.M <- ewenss.sampler(100000, 8, prior.alpha)
exp(prior.M$ln.probs[prior.M$M.IDs=="0,0,0,0,0,0,0,0"])
exp(prior.M$ln.probs[prior.M$M.IDs=="0,1,2,3,4,5,6,7"])

#running the sampler with a user-specified tree and fixed concentration parameter; compare with tree structure
tree <- ape::rcoal(8, LETTERS[1:8])
ape::plot.phylo(tree)
prior.alpha <- list(type="fixed", alpha=1)
prior.M <- ewenss.sampler(100000, tree, prior.alpha)
head(prior.M$M.IDs)
head(exp(prior.M$ln.probs))

#specifying hyperparameters for gamma prior using calc.concentration.prior
hyperparam <- calc.concentration.prior(8, 0.05, 0.01)
prior.alpha <- list(type="gamma", shape=hyperparam[1], rate=hyperparam[2])

#running the sampler without user-specified trees; compare with target prior probabilities
prior.M <- ewenss.sampler(100000, 8, prior.alpha)
exp(prior.M$ln.probs[prior.M$M.IDs=="0,0,0,0,0,0,0,0"])
exp(prior.M$ln.probs[prior.M$M.IDs=="0,1,2,3,4,5,6,7"])

#running the sampler with a user-specified tree and fixed concentration parameter; compare with tree structure
tree <- ape::rcoal(8, LETTERS[1:8])
ape::plot.phylo(tree)
prior.alpha <- list(type="fixed", alpha=1)
prior.M <- ewenss.sampler(100000, tree, prior.alpha)
head(prior.M$M.IDs)
head(exp(prior.M$ln.probs))

#specifying hyperparameters for gamma prior using calc.concentration.prior
hyperparam <- calc.concentration.prior(8, 0.05, 0.01)
prior.alpha <- list(type="gamma", shape=hyperparam[1], rate=hyperparam[2])

#running the sampler without user-specified trees; compare with target prior probabilities
prior.M <- ewenss.sampler(100000, 8, prior.alpha)
exp(prior.M$ln.probs[prior.M$M.IDs=="0,0,0,0,0,0,0,0"])
exp(prior.M$ln.probs[prior.M$M.IDs=="0,1,2,3,4,5,6,7"])

#running the sampler with a user-specified tree and fixed concentration parameter; compare with tree structure
tree <- ape::rcoal(8, LETTERS[1:8])
ape::plot.phylo(tree)
prior.alpha <- list(type="fixed", alpha=1)
prior.M <- ewenss.sampler(100000, tree, prior.alpha)
head(prior.M$M.IDs)
head(exp(prior.M$ln.probs))

#specifying hyperparameters for gamma prior using calc.concentration.prior
hyperparam <- calc.concentration.prior(8, 0.05, 0.01)
prior.alpha <- list(type="gamma", shape=hyperparam[1], rate=hyperparam[2])

#running the sampler without user-specified trees; compare with target prior probabilities
prior.M <- ewenss.sampler(100000, 8, prior.alpha)
exp(prior.M$ln.probs[prior.M$M.IDs=="0,0,0,0,0,0,0,0"])
exp(prior.M$ln.probs[prior.M$M.IDs=="0,1,2,3,4,5,6,7"])

#running the sampler with a user-specified tree and fixed concentration parameter; compare with tree structure
tree <- ape::rcoal(8, LETTERS[1:8])
ape::plot.phylo(tree)
prior.alpha <- list(type="fixed", alpha=1)
prior.M <- ewenss.sampler(100000, tree, prior.alpha)
head(prior.M$M.IDs)
head(exp(prior.M$ln.probs))

}
